#!/bin/bash
#
# Short:    Check if the active LoginHook or LogoutHook has been altered
# Author:   Mark J Swift
# Version:  1.0.3
# Modified: 11-Apr-2017
#
# Call from a shell as follows:    
#   CheckHooks

# ---

# assume that all scripts are in a subdirectory off the main project directory
GLB_sv_ProjectDirPath="$(dirname $(dirname ${0}))"

# Include the CommonLib
. "${GLB_sv_ProjectDirPath}/inc/Common.sh"

# Exit if something went wrong unexpectedly
if test -z "${GLB_sv_ProjectName}"
then
  exit 90
fi

# ---

# Exit if not the root user
if [ "${GLB_sv_ThisUserName}" != "root" ]
then
  exit 91
fi

# ---

GLB_nf_logmessage ${GLB_iv_MsgLevelInfo} "Checking com.apple.loginwindow for changes"

# ---

mkdir -p "${GLB_sv_ProjectConfig}/LoginHooks"

sv_MasterLoginHookFilePath="/usr/local/${GLB_sv_ProjectName}/lib/MasterLoginHook"

sv_CurrentLoginHookFilePath="$(defaults read com.apple.loginwindow LoginHook)"
if [ "${sv_CurrentLoginHookFilePath}" != "${sv_MasterLoginHookFilePath}" ]
then
  if test -n "${sv_CurrentLoginHookFilePath}"
  then
    sv_LoginHookLinkName=$(echo "${sv_CurrentLoginHookFilePath}" | tr "/" "-")
    if ! test -e "${GLB_sv_ProjectConfig}/LoginHooks/${sv_LoginHookLinkName}"
    then
      GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Installing LoginHook '${sv_CurrentLoginHookFilePath}'"
      ln -sf "${sv_CurrentLoginHookFilePath}" "${GLB_sv_ProjectConfig}/LoginHooks/${sv_LoginHookLinkName}"
    fi
  else
    # The LoginHook has been set to null
    sv_LoginHookLinkName=$(ls -1t "${GLB_sv_ProjectConfig}/LoginHooks/")
    if [ $(echo "${sv_LoginHookLinkName}" | wc -l) -eq 1 ]
    then
      # If there is only one hook, we can assume that setting the it to null means that we want to remove it
      sv_LoginHookFilePath="$(stat -f "%Y" "${GLB_sv_ProjectConfig}/LoginHooks/${sv_LoginHookLinkName}")"
      if test -n "${sv_LoginHookFilePath}"
      then
        GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Uninstalling LoginHook '${sv_LoginHookFilePath}'"
      fi
      rm -f "${GLB_sv_ProjectConfig}/LoginHooks/${sv_LoginHookLinkName}"
    fi
  fi
  defaults write com.apple.loginwindow LoginHook "${sv_MasterLoginHookFilePath}"
fi

# ---

mkdir -p "${GLB_sv_ProjectConfig}/LogoutHooks"

sv_MasterLogoutHookFilePath="/usr/local/${GLB_sv_ProjectName}/lib/MasterLogoutHook"

sv_CurrentLogoutHookFilePath="$(defaults read com.apple.loginwindow LogoutHook)"
if [ "${sv_CurrentLogoutHookFilePath}" != "${sv_MasterLogoutHookFilePath}" ]
then
  if test -n "${sv_CurrentLogoutHookFilePath}"
  then
    sv_LogoutHookLinkName=$(echo "${sv_CurrentLogoutHookFilePath}" | tr "/" "-")
    if ! test -e "${GLB_sv_ProjectConfig}/LogoutHooks/${sv_LogoutHookLinkName}"
    then
      GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Installing LogoutHook '${sv_CurrentLogoutHookFilePath}'"
      ln -sf "${sv_CurrentLogoutHookFilePath}" "${GLB_sv_ProjectConfig}/LogoutHooks/${sv_LogoutHookLinkName}"
    fi
  else
    # The LogoutHook has been set to null
    sv_LogoutHookLinkName=$(ls -1t "${GLB_sv_ProjectConfig}/LogoutHooks/")
    if [ $(echo "${sv_LogoutHookLinkName}" | wc -l) -eq 1 ]
    then
      # If there is only one hook, we can assume that setting the it to null means that we want to remove it
      sv_LogoutHookFilePath="$(stat -f "%Y" "${GLB_sv_ProjectConfig}/LogoutHooks/${sv_LogoutHookLinkName}")"
      if test -n "${sv_LogoutHookFilePath}"
      then
        GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Uninstalling LogoutHook '${sv_LogoutHookFilePath}'"
      fi
      rm -f "${GLB_sv_ProjectConfig}/LogoutHooks/${sv_LogoutHookLinkName}"
    fi
  fi
  defaults write com.apple.loginwindow LogoutHook "${sv_MasterLogoutHookFilePath}"
fi

# ---
