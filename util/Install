#!/bin/bash
#
# Short:    Install Project (command-line)
# Author:   Mark J Swift
# Version:  1.0.3
# Modified: 11-Apr-2017
#
#
# Called as follows:    
#   sudo Install [<root_dirpath>]

# ---

# assume that all scripts are in a subdirectory off the main project directory
GLB_sv_ProjectDirPath="$(dirname $(dirname ${0}))"

# Include the CommonLib
. "${GLB_sv_ProjectDirPath}/inc/Common.sh"

# Exit if something went wrong unexpectedly
if test -z "${GLB_sv_ProjectName}"
then
  exit 90
fi

# ---

# Exit if not the root user
if [ "${GLB_sv_ThisUserName}" != "root" ]
then
  GLB_nf_logmessage ${GLB_iv_MsgLevelErr} "Unable to run, try: sudo ${GLB_sv_ThisScriptName}"
  exit 91
fi

# ---

# Where we should install
sv_RootDirPath="${1}"

if [ "${sv_RootDirPath}" = "/" ]
then
  sv_RootDirPath=""
fi

# ---

if [ "${GLB_sv_ProjectDirPath}" = "${sv_RootDirPath}/usr/local/${GLB_sv_ProjectName}" ]
then
  GLB_nf_logmessage ${GLB_iv_MsgLevelErr} "Cannot install from this folder; copy the folder somewhere else and try again."
  exit 92
fi

# ---

if test -z "${sv_RootDirPath}"
then
  "${GLB_sv_ProjectDirPath}/lib/PreInstall"
  iv_Error="$?"
  if [ "${iv_Error}" != "0" ]
  then
    GLB_nf_logmessage ${GLB_iv_MsgLevelWarn} "Cancelling install of ${GLB_sv_ProjectName}."
    exit ${iv_Error}
  fi

  GLB_nf_logmessage ${GLB_iv_MsgLevelNotice} "Installing ${GLB_sv_ProjectName}."
fi

# Create a temporary directory private to this script
sv_ThisScriptTempDirPath="$(mktemp -dq /tmp/Install-XXXXXXXX)"

# -- Copy the main payload
mkdir -p "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}"
cp -pR "${GLB_sv_ProjectDirPath}/" "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}/"

# -- Remove any unwanted files
find "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}" -iname .DS_Store -exec rm -f {} \;
rm -fR "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}/.git"
rm -fR "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}/SupportFiles"

# -- Copy into place
cp -pR "${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectName}/" "${sv_RootDirPath}"/usr/local/${GLB_sv_ProjectName}/
chown -R root:wheel "${sv_RootDirPath}"/usr/local/${GLB_sv_ProjectName}
chmod -R 755 "${sv_RootDirPath}"/usr/local/${GLB_sv_ProjectName}

# -- Create the LaunchDaemon
cat << EOF > ${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectSignature}.CheckHooks.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Label</key>
	<string>${GLB_sv_ProjectSignature}.CheckHooks</string>
	<key>ProgramArguments</key>
	<array>
		<string>/usr/local/${GLB_sv_ProjectName}/lib/CheckHooks</string>
	</array>
	<key>WatchPaths</key>
	<array>
		<string>/private/var/root/Library/Preferences/com.apple.loginwindow.plist</string>
	</array>
	<key>RunAtLoad</key>
	<true/>
</dict>
</plist>
EOF
cp ${sv_ThisScriptTempDirPath}/${GLB_sv_ProjectSignature}.CheckHooks.plist "${sv_RootDirPath}"/Library/LaunchDaemons/
chown root:wheel "${sv_RootDirPath}"/Library/LaunchDaemons/${GLB_sv_ProjectSignature}.CheckHooks.plist
chmod 644 "${sv_RootDirPath}"/Library/LaunchDaemons/${GLB_sv_ProjectSignature}.CheckHooks.plist

if test -z "${sv_RootDirPath}"
then
  "${GLB_sv_ProjectDirPath}/lib/PostInstall"
  iv_Error="$?"
  if [ "${iv_Error}" != "0" ]
  then
    GLB_nf_logmessage ${GLB_iv_MsgLevelWarn} "Cancelling install of ${GLB_sv_ProjectName}."
    "${GLB_sv_ProjectDirPath}/lib/Uninstall" "${sv_RootDirPath}"
    exit ${iv_Error}
  fi
fi

exit 0
